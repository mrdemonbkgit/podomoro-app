name: Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  frontend-quality:
    name: Frontend Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: TypeScript type check
        run: npm run typecheck
      
      - name: ESLint
        run: npm run lint
      
      - name: Format check
        run: npm run format:check
      
      - name: Unit tests
        run: npm test
      
      - name: Build
        run: npm run build
      
      - name: Check build size
        run: |
          SIZE=$(du -sh dist | cut -f1)
          echo "üì¶ Build size: $SIZE"
          echo "build-size=$SIZE" >> $GITHUB_OUTPUT

  functions-quality:
    name: Cloud Functions Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json
      
      - name: Install functions dependencies
        working-directory: ./functions
        run: npm ci
      
      - name: TypeScript type check (functions)
        working-directory: ./functions
        run: npx tsc --noEmit
      
      - name: Build functions
        working-directory: ./functions
        run: npm run build
      
      - name: Verify no deprecated code compiled
        working-directory: ./functions
        run: |
          if [ -f "lib/milestones.js" ]; then
            echo "‚ùå Deprecated milestones.js found in build!"
            exit 1
          fi
          echo "‚úÖ No deprecated files in build"

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check for console.log statements
        run: npm run scan:console
      
      - name: Check for hardcoded paths
        run: npm run scan:paths

  firestore-rules:
    name: Firestore Security Rules Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Java (for Firestore Emulator)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      
      - name: Test Firestore rules
        run: npm run test:rules

  status-check:
    name: CI Status Check
    runs-on: ubuntu-latest
    needs: [frontend-quality, functions-quality, code-quality, firestore-rules]
    if: always()
    
    steps:
      - name: Check if all jobs succeeded
        run: |
          if [ "${{ contains(needs.*.result, 'failure') }}" == "true" ]; then
            echo "‚ùå One or more CI checks failed"
            exit 1
          else
            echo "‚úÖ All CI checks passed"
          fi
