#!/usr/bin/env node

/**
 * Generate build information file
 * This script runs automatically before each build to generate:
 * - Build number (timestamp-based for uniqueness)
 * - Build date
 * - Git commit hash (if available)
 */

import { writeFileSync } from 'fs';
import { execSync } from 'child_process';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Generate build number (timestamp format: YYYYMMDDHHmmss)
const now = new Date();
const buildNumber = now.toISOString()
  .replace(/[-:T]/g, '')
  .replace(/\..+/, '')
  .slice(0, 14); // YYYYMMDDHHmmss

// Get git commit hash (short version)
let gitCommit = 'unknown';
try {
  gitCommit = execSync('git rev-parse --short HEAD', { encoding: 'utf8' }).trim();
} catch (error) {
  console.warn('Warning: Could not get git commit hash');
}

// Get git branch
let gitBranch = 'unknown';
try {
  gitBranch = execSync('git rev-parse --abbrev-ref HEAD', { encoding: 'utf8' }).trim();
} catch (error) {
  console.warn('Warning: Could not get git branch');
}

// Build info object
const buildInfo = {
  buildNumber,
  buildDate: now.toISOString(),
  gitCommit,
  gitBranch,
  timestamp: now.getTime(),
};

// Generate TypeScript file
const content = `/**
 * AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
 * Generated at: ${buildInfo.buildDate}
 * 
 * This file is automatically generated during the build process.
 * It contains build-specific information like build number and git commit.
 */

export interface BuildInfo {
  buildNumber: string;
  buildDate: string;
  gitCommit: string;
  gitBranch: string;
  timestamp: number;
}

export const buildInfo: BuildInfo = ${JSON.stringify(buildInfo, null, 2)};

// Human-readable formats
export const getBuildNumberShort = (): string => {
  // Format: YYMMDD-HHmm
  const bn = buildInfo.buildNumber;
  return \`\${bn.slice(2, 8)}-\${bn.slice(8, 12)}\`;
};

export const getBuildDateFormatted = (): string => {
  return new Date(buildInfo.buildDate).toLocaleString();
};

export const getGitInfo = (): string => {
  return \`\${buildInfo.gitBranch}@\${buildInfo.gitCommit}\`;
};
`;

// Write to src/buildInfo.ts
const outputPath = join(__dirname, '..', 'src', 'buildInfo.ts');
writeFileSync(outputPath, content, 'utf8');

console.log('âœ… Build info generated successfully!');
console.log(`   Build Number: ${buildNumber}`);
console.log(`   Git Commit:   ${gitCommit}`);
console.log(`   Git Branch:   ${gitBranch}`);
console.log(`   Output:       ${outputPath}`);

